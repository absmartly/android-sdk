apply plugin: 'com.android.library'
apply plugin: "signing"
apply plugin: "maven-publish"

ext {
    VERSION = "1.0.0_SNAPSHOT"
    GROUP_ID = "com.absmartly.sdk"
    is_release_version = !VERSION.endsWith("SNAPSHOT")
}

android {
    namespace 'com.absmartly.android.sdk'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.absmartly.sdk:core-api:1.5.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
    implementation 'org.conscrypt:conscrypt-android:2.5.2'
}

task ship() {
    dependsOn('publish')
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                artifactId = 'android-sdk'
                version = VERSION
                group = GROUP_ID

                customizePom(pom, 'A/B Smartly Android SDK')
                pom.description = 'A/B Smartly Android SDK'
                from components.release
            }
        }
        repositories {
            /*maven {
                def releaseUrl = "https://s01.oss.sonatype.org/service/local/"
                def snapshotUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = is_release_version ? releaseUrl : snapshotUrl
                credentials {
                    username System.getenv('ossrh.username')
                    password System.getenv('ossrh.password')
                }
            }*/
            //mavenLocal()
        }
    }

    signing {
        useGpgCmd()

        sign publishing.publications.release
    }
}

def customizePom(pom, title) {
    pom.withXml {
        asNode().children().last() + {
            name title
            url 'https://www.absmartly.com'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            developers {
                developer {
                    id 'absmartly'
                    name 'A/B Smartly'
                    email 'dev@absmartly.com'
                }
            }
            scm {
                connection 'scm:git:git://github.com/absmartly/android-sdk.git'
                developerConnection 'scm:git:ssh://github.com/absmartly/android-sdk.git'
                url 'https://github.com/absmartly/android-sdk'
            }
        }
    }
}